apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'com.terrafolio'

repositories {
	mavenCentral()
	maven {
		url 'http://maven.jenkins-ci.org:8081/content/repositories/releases'
	}
}

dependencies {
   compile gradleApi()
   compile localGroovy()
   
   compile('org.codehaus.groovy.modules.http-builder:http-builder:0.5.2') {
	   exclude(module: 'groovy')
   }
   
   compile 'xmlunit:xmlunit:1.3'
   compile('org.jenkins-ci.plugins:job-dsl-core:+'){
	exclude group:'org.slf4j'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '1.9'
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
  description = 'An archive of the GroovyDocs for Maven Central'
  classifier = 'javadoc'
  from groovydoc
}
 
task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

artifacts {
	archives jar
	archives groovydocJar
	archives sourcesJar
}

/*signing {
	sign configurations.archives
}*/

/*
uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment { MavenDeployment deployment -> signPom(deployment) }
 
			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
			  authentication(userName: sonatypeUsername, password: sonatypePassword)
			}
 
			pom.project {
			   name 'gradle-jenkins-plugin'
			   packaging 'jar'
			   description 'This is a gradle plugin for programmatically configuring Jenkins jobs.'
			   url 'https://github.com/ghale/gradle-jenkins-plugin'
 
			   scm {
				   url 'https://github.com/ghale/gradle-jenkins-plugin.git'
				   connection 'scm:https://github.com/ghale/gradle-jenkins-plugin.git'
				   developerConnection 'scm:git@github.com/ghale/gradle-jenkins-plugin.git'
			   }
 
			   licenses {
				   license {
					   name 'The Apache Software License, Version 2.0'
					   url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					   distribution 'repo'
				   }
			   }
 
			   developers {
				   developer {
					   id 'ghale'
					   name 'Gary Hale'
					   email 'ghhale@computer.org'
				   }
			   }
		   }
		}
	}
}
*/
